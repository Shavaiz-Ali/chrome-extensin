chrome.runtime.onInstalled.addListener(async()=>{console.log("Background script installed and running");const n=chrome.runtime.getURL("lang.json"),o=await(await fetch(n)).json();chrome.storage.sync.set({translations:o},()=>{console.log("Translations loaded and stored in Chrome storage.")})});async function e(){return new Promise(n=>{chrome.storage.sync.get("translations",a=>{n(a.translations||{})})})}async function i(n,a){console.log("translate api hit successfully",n,a);try{const o=`https://free-google-translator.p.rapidapi.com/external-api/free-google-translator?from=en&to=${a}&query=${n}`,t=await(await fetch(o,{method:"POST",headers:{"x-rapidapi-key":"c12f85e2f8msh5cca653a58d801fp15981ejsn9271b771e623","x-rapidapi-host":"free-google-translator.p.rapidapi.com","Content-Type":"application/json"},body:{translate:"rapidapi"}})).json();return console.log(t),t.translation}catch(o){return console.error("Error fetching translation:",o),null}}chrome.runtime.onMessage.addListener(async(n,a,o)=>{if(console.log(n),n.action==="translateText"){const r=await e(),s=await i(n.text,n.targetLanguage);if(s){const t={...r,[n==null?void 0:n.text]:s};await chrome.storage.sync.set({translations:t})}else o({error:"Translation failed"})}return!0});
